FavIcon;Default order;Level;Error code;Message;Project;Short file;Line;False alarm;File;Analyzer;Analyzed source file(s)
False;1;1;V522;Dereferencing of the null pointer 'p' might take place.;;trees.cpp;242;False;E:\ButterflyOS\sources\std\trees.cpp;General;
False;2;1;V522;Dereferencing of the null pointer 'g' might take place.;;trees.cpp;330;False;E:\ButterflyOS\sources\std\trees.cpp;General;
False;7;1;V617;Consider inspecting the condition. The '1' argument of the '|' bitwise operation contains a non-zero value.;;ata.cpp;58;False;E:\ButterflyOS\sources\storage\ata.cpp;General;
False;7;1;V630;The 'malloc' function is used to allocate memory for an array of objects which are classes containing constructors and destructors.;;drives.cpp;11;False;E:\ButterflyOS\sources\storage\drives.cpp;General;
False;21;1;V512;A call of the 'memset' function will lead to overflow of the buffer 'cbw'.;;msd.cpp;174;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;98;1;V773;The function was exited without releasing the 'endpointIn' pointer. A memory leak is possible.;;msd.cpp;531;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;107;1;V773;The function was exited without releasing the 'endpointIn' pointer. A memory leak is possible.;;msd.cpp;527;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;94;1;V512;A call of the 'memset' function will lead to overflow of the buffer 'cbw'.;;msd.cpp;438;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;110;1;V641;The size of the allocated memory buffer is not a multiple of the element size.;;msd.cpp;547;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;63;1;V641;The size of the allocated memory buffer is not a multiple of the element size.;;msd.cpp;544;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;60;1;V773;The function was exited without releasing the 'endpointIn' pointer. A memory leak is possible.;;msd.cpp;521;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;30;1;V512;A call of the 'memset' function will lead to overflow of the buffer 'cbw'.;;msd.cpp;285;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;56;1;V641;The size of the allocated memory buffer is not a multiple of the element size.;;msd.cpp;545;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;127;1;V512;A call of the 'memset' function will lead to overflow of the buffer 'cbw'.;;msd.cpp;403;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;101;1;V641;The size of the allocated memory buffer is not a multiple of the element size.;;msd.cpp;551;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;35;1;V512;A call of the 'memset' function will lead to overflow of the buffer 'cbw'.;;msd.cpp;368;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;131;1;V773;The function was exited without releasing the 'endpointIn' pointer. A memory leak is possible.;;msd.cpp;496;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;16;1;V512;A call of the 'memset' function will lead to overflow of the buffer 'cbw'.;;msd.cpp;110;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;46;1;V512;A call of the 'memset' function will lead to overflow of the buffer 'cbw'.;;msd.cpp;434;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;134;1;V641;The size of the allocated memory buffer is not a multiple of the element size.;;msd.cpp;516;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;52;1;V641;The size of the allocated memory buffer is not a multiple of the element size.;;msd.cpp;543;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;11;1;V512;A call of the 'memset' function will lead to overflow of the buffer 'cbw'.;;msd.cpp;44;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;49;1;V773;The function was exited without releasing the 'endpointIn' pointer. A memory leak is possible.;;msd.cpp;522;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;55;1;V773;The function was exited without releasing the 't' pointer. A memory leak is possible.;;msd.cpp;539;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;7;1;V630;The 'malloc' function is used to allocate memory for an array of objects which are classes containing constructors and destructors.;;storage.cpp;9;False;E:\ButterflyOS\sources\storage\storage.cpp;General;
False;8;1;V630;The 'malloc' function is used to allocate memory for an array of objects which are classes containing constructors and destructors.;;storage.cpp;11;False;E:\ButterflyOS\sources\storage\storage.cpp;General;
False;22;1;V576;Incorrect format. Consider checking the second actual argument of the 'printf' function. To print the value of pointer the '%p' should be used.;;ehci.cpp;362;False;E:\ButterflyOS\sources\usb\ehci.cpp;General;
False;8;1;V576;Incorrect format. Consider checking the second actual argument of the 'printf' function. To print the value of pointer the '%p' should be used.;;ehci.cpp;359;False;E:\ButterflyOS\sources\usb\ehci.cpp;General;
False;11;1;V641;The size of the allocated memory buffer is not a multiple of the element size.;;ehci.cpp;739;False;E:\ButterflyOS\sources\usb\ehci.cpp;General;
False;17;1;V576;Incorrect format. Consider checking the second actual argument of the 'printf' function. To print the value of pointer the '%p' should be used.;;ehci.cpp;361;False;E:\ButterflyOS\sources\usb\ehci.cpp;General;
False;25;1;V641;The size of the allocated memory buffer is not a multiple of the element size.;;ehci.cpp;742;False;E:\ButterflyOS\sources\usb\ehci.cpp;General;
False;20;1;V641;The size of the allocated memory buffer is not a multiple of the element size.;;ehci.cpp;741;False;E:\ButterflyOS\sources\usb\ehci.cpp;General;
False;2;1;V743;The memory areas must not overlap. Use 'memmove' function.;;video.cpp;8;False;E:\ButterflyOS\sources\video.cpp;General;
False;9;2;V730;Not all members of a class are initialized inside the compiler generated constructor. Consider inspecting: device, cache, last_access.;;storage.h;22;False;E:\ButterflyOS\sources\includes\storage\storage.h;General;
False;8;2;V730;Not all members of a class are initialized inside the compiler generated constructor. Consider inspecting: LBA, count, buf.;;storage.h;15;False;E:\ButterflyOS\sources\includes\storage\storage.h;General;
False;1;2;V1002;The 'iterator' class, containing pointers, constructor and destructor, is copied by the automatically generated copy constructor.;;map.h;53;False;E:\ButterflyOS\sources\std\map.h;General;
False;2;2;V519;The 'it' variable is assigned values twice successively. Perhaps this is a mistake. Check lines: 108, 109.;;map.h;109;False;E:\ButterflyOS\sources\std\map.h;General;
False;4;2;V522;There might be dereferencing of a potential null pointer 'p'. Check lines: 124, 123.;;map.h;124;False;E:\ButterflyOS\sources\std\map.h;General;
False;6;2;V522;There might be dereferencing of a potential null pointer 'p'. Check lines: 136, 135.;;map.h;136;False;E:\ButterflyOS\sources\std\map.h;General;
False;10;2;V641;The size of the '& cmdtbl->cfis' buffer is not a multiple of the element size of the type 'FIS_REG_H2D'.;;ahci.cpp;274;False;E:\ButterflyOS\sources\storage\ahci.cpp;General;
False;7;2;V641;The size of the '& cmdtbl->cfis' buffer is not a multiple of the element size of the type 'FIS_REG_H2D'.;;ahci.cpp;117;False;E:\ButterflyOS\sources\storage\ahci.cpp;General;
False;15;2;V641;The size of the 'buf' buffer is not a multiple of the element size of the type 'identify_data'.;;ahci.cpp;413;False;E:\ButterflyOS\sources\storage\ahci.cpp;General;
False;14;2;V641;The size of the 'buf' buffer is not a multiple of the element size of the type 'identify_data'.;;ahci.cpp;410;False;E:\ButterflyOS\sources\storage\ahci.cpp;General;
False;8;2;V641;The size of the '& cmdtbl->cfis' buffer is not a multiple of the element size of the type 'FIS_REG_H2D'.;;ahci.cpp;196;False;E:\ButterflyOS\sources\storage\ahci.cpp;General;
False;12;2;V522;There might be dereferencing of a potential null pointer 'buf'. Check lines: 400, 399.;;ahci.cpp;400;False;E:\ButterflyOS\sources\storage\ahci.cpp;General;
False;13;2;V522;There might be dereferencing of a potential null pointer 'ad'. Check lines: 410, 409.;;ahci.cpp;410;False;E:\ButterflyOS\sources\storage\ahci.cpp;General;
False;8;2;V522;There might be dereferencing of a potential null pointer 'device_names'. Check lines: 12, 11.;;drives.cpp;12;False;E:\ButterflyOS\sources\storage\drives.cpp;General;
False;113;2;V591;Non-void function should return a value.;;msd.cpp;571;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;129;2;V575;The potential null pointer is passed into 'memset' function. Inspect the first argument. Check lines: 474, 473.;;msd.cpp;474;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;54;2;V591;Non-void function should return a value.;;msd.cpp;567;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;130;2;V522;There might be dereferencing of a potential null pointer 'endpointOut'. Check lines: 486, 485.;;msd.cpp;486;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;53;2;V522;There might be dereferencing of a potential null pointer '(unsigned short *) b'. Check lines: 564, 562.;;msd.cpp;564;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;132;2;V522;There might be dereferencing of a potential null pointer 't'. Check lines: 510, 505.;;msd.cpp;510;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;51;2;V522;There might be dereferencing of a potential null pointer 'storage'. Check lines: 538, 534.;;msd.cpp;538;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;133;2;V522;There might be dereferencing of a potential null pointer 'storage'. Check lines: 511, 507.;;msd.cpp;511;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;112;2;V522;There might be dereferencing of a potential null pointer '(unsigned short *) b'. Check lines: 568, 566.;;msd.cpp;568;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;48;2;V522;There might be dereferencing of a potential null pointer 'endpointOut'. Check lines: 514, 512.;;msd.cpp;514;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;47;2;V575;The potential null pointer is passed into 'memset' function. Inspect the first argument. Check lines: 505, 504.;;msd.cpp;505;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;42;2;V779;Unreachable code detected. It is possible that an error is present.;;msd.cpp;503;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;136;2;V522;There might be dereferencing of a potential null pointer '(unsigned short *) b'. Check lines: 537, 535.;;msd.cpp;537;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;137;2;V591;Non-void function should return a value.;;msd.cpp;540;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;50;2;V522;There might be dereferencing of a potential null pointer 't'. Check lines: 537, 532.;;msd.cpp;537;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;104;2;V591;Non-void function should return a value.;;msd.cpp;575;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;58;2;V779;Unreachable code detected. It is possible that an error is present.;;msd.cpp;540;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;59;2;V522;There might be dereferencing of a potential null pointer 'endpointOut'. Check lines: 513, 512.;;msd.cpp;513;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;106;2;V522;There might be dereferencing of a potential null pointer 'endpointOut'. Check lines: 517, 516.;;msd.cpp;517;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;100;2;V522;There might be dereferencing of a potential null pointer 'storage'. Check lines: 546, 542.;;msd.cpp;546;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;99;2;V522;There might be dereferencing of a potential null pointer 't'. Check lines: 545, 540.;;msd.cpp;545;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;97;2;V522;There might be dereferencing of a potential null pointer 'endpointOut'. Check lines: 521, 520.;;msd.cpp;521;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;96;2;V575;The potential null pointer is passed into 'memset' function. Inspect the first argument. Check lines: 509, 508.;;msd.cpp;509;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;108;2;V522;There might be dereferencing of a potential null pointer 't'. Check lines: 541, 536.;;msd.cpp;541;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;65;2;V522;There might be dereferencing of a potential null pointer '(unsigned short *) b'. Check lines: 565, 563.;;msd.cpp;565;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;66;2;V591;Non-void function should return a value.;;msd.cpp;568;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;62;2;V522;There might be dereferencing of a potential null pointer 'storage'. Check lines: 539, 533.;;msd.cpp;539;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;61;2;V522;There might be dereferencing of a potential null pointer 't'. Check lines: 536, 531.;;msd.cpp;536;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;103;2;V522;There might be dereferencing of a potential null pointer '(unsigned short *) b'. Check lines: 572, 570.;;msd.cpp;572;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;109;2;V522;There might be dereferencing of a potential null pointer 'storage'. Check lines: 542, 538.;;msd.cpp;542;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;11;2;V522;There might be dereferencing of a potential null pointer 'scb'. Check lines: 63, 62.;;storage.cpp;63;False;E:\ButterflyOS\sources\storage\storage.cpp;General;
False;12;2;V575;The potential null pointer is passed into 'memcpy' function. Inspect the first argument. Check lines: 64, 63.;;storage.cpp;64;False;E:\ButterflyOS\sources\storage\storage.cpp;General;
False;1;2;V614;Potentially uninitialized variable 'digit' used.;;string.cpp;373;False;E:\ButterflyOS\sources\string.cpp;General;
False;5;2;V591;Non-void function should return a value.;;string.cpp;1065;False;E:\ButterflyOS\sources\string.cpp;General;
False;4;2;V591;Non-void function should return a value.;;string.cpp;1059;False;E:\ButterflyOS\sources\string.cpp;General;
False;2;2;V614;Potentially uninitialized variable 'digit' used.;;string.cpp;417;False;E:\ButterflyOS\sources\string.cpp;General;
False;3;2;V614;Potentially uninitialized variable 'base' used. Consider checking the third actual argument of the 'llbtoa' function.;;string.cpp;635;False;E:\ButterflyOS\sources\string.cpp;General;
False;7;2;V522;There might be dereferencing of a potential null pointer 'hub'. Check lines: 289, 288.;;hub.cpp;289;False;E:\ButterflyOS\sources\usb\hub.cpp;General;
False;8;2;V575;The potential null pointer is passed into 'memcpy' function. Inspect the first argument. Check lines: 315, 314.;;usbd.cpp;315;False;E:\ButterflyOS\sources\usb\usbd.cpp;General;
False;14;2;V575;The potential null pointer is passed into 'memcpy' function. Inspect the first argument. Check lines: 240, 239.;;usbd.cpp;240;False;E:\ButterflyOS\sources\usb\usbd.cpp;General;
False;15;2;V575;The potential null pointer is passed into 'memcpy' function. Inspect the first argument. Check lines: 263, 262.;;usbd.cpp;263;False;E:\ButterflyOS\sources\usb\usbd.cpp;General;
False;7;2;V575;The potential null pointer is passed into 'memcpy' function. Inspect the first argument. Check lines: 292, 291.;;usbd.cpp;292;False;E:\ButterflyOS\sources\usb\usbd.cpp;General;
False;6;2;V519;The 'attr' variable is assigned values twice successively. Perhaps this is a mistake. Check lines: 133, 135.;;video.cpp;135;False;E:\ButterflyOS\sources\video.cpp;General;
False;7;3;V730;Not all members of a class are initialized inside the compiler generated constructor. Consider inspecting: port, drive, multiple_count, sector_size, serial, media_serial, ...;;ata.h;58;False;E:\ButterflyOS\sources\includes\storage\ata.h;General;
False;2;3;V566;The integer constant is converted to pointer. Possibly an error or a bad coding style: (unsigned int *)(0x9800 + 2);;interrupts.cpp;39;False;E:\ButterflyOS\sources\interrupts.cpp;General;
False;1;3;V566;The integer constant is converted to pointer. Possibly an error or a bad coding style: (unsigned short *) 0x9800;;interrupts.cpp;38;False;E:\ButterflyOS\sources\interrupts.cpp;General;
False;2;3;V566;The integer constant is converted to pointer. Possibly an error or a bad coding style: (unsigned int *) 0x200000;;memory.cpp;8;False;E:\ButterflyOS\sources\memory\memory.cpp;General;
False;1;3;V566;The integer constant is converted to pointer. Possibly an error or a bad coding style: (void *) 0x200000;;memory.cpp;3;False;E:\ButterflyOS\sources\memory\memory.cpp;General;
False;3;3;V630;The 'malloc' function is used to allocate memory for an array of objects which are classes containing constructors.;;map.h;123;False;E:\ButterflyOS\sources\std\map.h;General;
False;5;3;V630;The 'malloc' function is used to allocate memory for an array of objects which are classes containing constructors.;;map.h;135;False;E:\ButterflyOS\sources\std\map.h;General;
False;11;3;V601;The 'true' value is implicitly cast to the integer type.;;ahci.cpp;319;False;E:\ButterflyOS\sources\storage\ahci.cpp;General;
False;9;3;V601;The 'false' value is implicitly cast to the integer type.;;ahci.cpp;248;False;E:\ButterflyOS\sources\storage\ahci.cpp;General;
False;9;3;V601;The 'true' value is implicitly cast to the integer type.;;ata.cpp;206;False;E:\ButterflyOS\sources\storage\ata.cpp;General;
False;8;3;V601;The 'false' value is implicitly cast to the integer type.;;ata.cpp;200;False;E:\ButterflyOS\sources\storage\ata.cpp;General;
False;91;3;V688;The 'endpointIn' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;434;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;92;3;V688;The 'endpointOut' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;434;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;93;3;V688;The 'cbw' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;436;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;88;3;V688;The 'endpointOut' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;370;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;87;3;V688;The 'endpointIn' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;370;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;86;3;V688;The 't' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;369;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;95;3;V729;Function body contains the 'retry_read' label that is not used by any 'goto' statements.;;msd.cpp;437;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;85;3;V525;The code contains the collection of similar blocks. Check items 'endpointOut', 'endpointIn', 'endpointIn' in lines 300, 313, 321.;;msd.cpp;300;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;84;3;V688;The 'cbw' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;288;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;83;3;V688;The 'endpointOut' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;287;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;82;3;V688;The 'endpointIn' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;287;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;20;3;V688;The 'cbw' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;173;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;80;3;V688;The 'cbw' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;241;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;89;3;V688;The 'cbw' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;371;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;90;3;V688;The 't' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;433;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;22;3;V688;The 't' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;235;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;105;3;V525;The code contains the collection of similar blocks. Check items 'endpointOut', 'endpointIn', 'endpointIn' in lines 296, 309, 317.;;msd.cpp;296;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;135;3;V576;Incorrect format. Consider checking the second actual argument of the 'printf' function. The integer argument of 32-bit size is expected.;;msd.cpp;532;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;128;3;V729;Function body contains the 'retry_read' label that is not used by any 'goto' statements.;;msd.cpp;402;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;126;3;V688;The 'cbw' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;401;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;125;3;V688;The 'endpointOut' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;399;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;124;3;V688;The 'endpointIn' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;399;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;123;3;V688;The 't' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;398;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;122;3;V688;The 'cbw' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;336;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;121;3;V688;The 'endpointOut' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;335;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;120;3;V688;The 'endpointIn' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;335;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;119;3;V688;The 't' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;334;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;118;3;V525;The code contains the collection of similar blocks. Check items 'endpointOut', 'endpointIn', 'endpointIn' in lines 265, 278, 286.;;msd.cpp;265;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;117;3;V688;The 'cbw' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;253;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;116;3;V688;The 'endpointOut' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;252;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;115;3;V688;The 'endpointIn' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;252;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;114;3;V688;The 't' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;251;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;111;3;V576;Incorrect format. Consider checking the second actual argument of the 'printf' function. The integer argument of 32-bit size is expected.;;msd.cpp;563;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;79;3;V688;The 'endpointOut' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;240;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;102;3;V576;Incorrect format. Consider checking the second actual argument of the 'printf' function. The integer argument of 32-bit size is expected.;;msd.cpp;567;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;78;3;V688;The 'endpointIn' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;240;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;81;3;V688;The 't' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;286;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;76;3;V688;The 'cbw' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;177;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;10;3;V688;The 'cbw' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;43;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;12;3;V688;The 't' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;107;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;13;3;V688;The 'endpointIn' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;108;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;14;3;V688;The 'endpointOut' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;108;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;15;3;V688;The 'cbw' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;109;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;41;3;V576;Incorrect format. Consider checking the second actual argument of the 'printf' function. The integer argument of 32-bit size is expected.;;msd.cpp;559;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;40;3;V729;Function body contains the 'retry_read' label that is not used by any 'goto' statements.;;msd.cpp;433;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;39;3;V688;The 'cbw' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;432;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;38;3;V688;The 'endpointOut' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;430;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;37;3;V688;The 'endpointIn' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;430;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;17;3;V688;The 't' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;170;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;77;3;V688;The 't' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;239;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;18;3;V688;The 'endpointIn' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;171;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;33;3;V688;The 'endpointOut' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;366;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;32;3;V688;The 'endpointIn' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;366;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;31;3;V688;The 't' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;365;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;19;3;V688;The 'endpointOut' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;171;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;29;3;V688;The 'cbw' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;284;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;28;3;V688;The 'endpointOut' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;283;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;27;3;V688;The 'endpointIn' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;283;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;26;3;V688;The 't' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;282;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;25;3;V688;The 'cbw' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;237;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;24;3;V688;The 'endpointOut' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;236;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;23;3;V688;The 'endpointIn' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;236;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;34;3;V688;The 'cbw' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;367;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;9;3;V688;The 'endpointOut' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;42;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;36;3;V688;The 't' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;429;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;7;3;V688;The 't' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;41;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;75;3;V688;The 'endpointOut' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;175;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;74;3;V688;The 'endpointIn' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;175;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;73;3;V688;The 't' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;174;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;72;3;V688;The 'cbw' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;113;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;71;3;V688;The 't' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;112;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;57;3;V576;Incorrect format. Consider checking the second actual argument of the 'printf' function. The integer argument of 32-bit size is expected.;;msd.cpp;561;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;70;3;V688;The 'cbw' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;56;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;69;3;V688;The 'endpointOut' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;53;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;68;3;V688;The 'endpointIn' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;53;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;67;3;V688;The 't' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;52;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;8;3;V688;The 'endpointIn' local variable possesses the same name as one of the class members, which can result in a confusion.;;msd.cpp;42;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;64;3;V576;Incorrect format. Consider checking the second actual argument of the 'printf' function. The integer argument of 32-bit size is expected.;;msd.cpp;560;False;E:\ButterflyOS\sources\storage\msd.cpp;General;
False;9;3;V550;An odd precise comparison: scb->la != - (1e18 + 1). It's probably better to use a comparison with defined precision: fabs(A - B) > Epsilon.;;storage.cpp;37;False;E:\ButterflyOS\sources\storage\storage.cpp;General;
False;10;3;V601;The 'true' value is implicitly cast to the integer type.;;storage.cpp;42;False;E:\ButterflyOS\sources\storage\storage.cpp;General;
False;9;3;V522;Dereferencing of the null pointer 'qh' might take place. The potential null pointer is passed into 'ehci_insert_async_qh' function. Inspect the second argument. Check lines: 127, 443.;;ehci.cpp;127;False;E:\ButterflyOS\sources\usb\ehci.cpp;General;
False;26;3;V779;Unreachable code detected. It is possible that an error is present.;;ehci.cpp;714;False;E:\ButterflyOS\sources\usb\ehci.cpp;General;
False;24;3;V522;Dereferencing of the null pointer 'qh' might take place. The potential null pointer is passed into 'ehci_insert_periodic_qh' function. Inspect the second argument. Check lines: 140, 493.;;ehci.cpp;140;False;E:\ButterflyOS\sources\usb\ehci.cpp;General;
False;23;3;V522;Dereferencing of the null pointer 'qh' might take place. The potential null pointer is passed into 'EhciWaitForQH' function. Inspect the second argument. Check lines: 341, 448.;;ehci.cpp;341;False;E:\ButterflyOS\sources\usb\ehci.cpp;General;
False;10;3;V522;Dereferencing of the null pointer 'qh' might take place. The potential null pointer is passed into 'ehci_insert_async_qh' function. Inspect the second argument. Check lines: 127, 488.;;ehci.cpp;127;False;E:\ButterflyOS\sources\usb\ehci.cpp;General;
False;21;3;V779;Unreachable code detected. It is possible that an error is present.;;ehci.cpp;713;False;E:\ButterflyOS\sources\usb\ehci.cpp;General;
False;7;3;V566;The integer constant is converted to pointer. Possibly an error or a bad coding style: (char *) 0xB8000;;ehci.cpp;271;False;E:\ButterflyOS\sources\usb\ehci.cpp;General;
False;19;3;V522;Dereferencing of the null pointer 'qh' might take place. The potential null pointer is passed into 'ehci_insert_periodic_qh' function. Inspect the second argument. Check lines: 140, 492.;;ehci.cpp;140;False;E:\ButterflyOS\sources\usb\ehci.cpp;General;
False;18;3;V522;Dereferencing of the null pointer 'qh' might take place. The potential null pointer is passed into 'EhciWaitForQH' function. Inspect the second argument. Check lines: 341, 447.;;ehci.cpp;341;False;E:\ButterflyOS\sources\usb\ehci.cpp;General;
False;16;3;V566;The integer constant is converted to pointer. Possibly an error or a bad coding style: (char *) 0xB8000;;ehci.cpp;273;False;E:\ButterflyOS\sources\usb\ehci.cpp;General;
False;12;3;V779;Unreachable code detected. It is possible that an error is present.;;ehci.cpp;711;False;E:\ButterflyOS\sources\usb\ehci.cpp;General;
False;10;3;V524;It is odd that the body of 'UsbDevRequest' function is fully equivalent to the body of 'UsbIntrRequest' function.;;usbd.cpp;87;False;E:\ButterflyOS\sources\usb\usbd.cpp;General;
False;16;3;V641;The size of the 'configBuf' buffer is not a multiple of the element size of the type 'UsbConfDesc'.;;usbd.cpp;198;False;E:\ButterflyOS\sources\usb\usbd.cpp;General;
False;9;3;V641;The size of the 'configBuf' buffer is not a multiple of the element size of the type 'UsbConfDesc'.;;usbd.cpp;250;False;E:\ButterflyOS\sources\usb\usbd.cpp;General;
False;4;3;V566;The integer constant is converted to pointer. Possibly an error or a bad coding style: (char *) 0xB8000;;video.cpp;17;False;E:\ButterflyOS\sources\video.cpp;General;
False;3;3;V566;The integer constant is converted to pointer. Possibly an error or a bad coding style: (char *) 0xB8000;;video.cpp;9;False;E:\ButterflyOS\sources\video.cpp;General;
False;1;3;V566;The integer constant is converted to pointer. Possibly an error or a bad coding style: (char *) 0xB8000;;video.cpp;8;False;E:\ButterflyOS\sources\video.cpp;General;
False;5;3;V566;The integer constant is converted to pointer. Possibly an error or a bad coding style: (char *) 0xB8000;;video.cpp;43;False;E:\ButterflyOS\sources\video.cpp;General;
